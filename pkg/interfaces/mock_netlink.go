// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/interfaces/interfaces.go
//
// Generated by this command:
//
//	mockgen -source=pkg/interfaces/interfaces.go -destination=pkg/interfaces/mock_netlink.go -package=interfaces
//

// Package interfaces is a generated GoMock package.
package interfaces

import (
	reflect "reflect"

	netlink "github.com/vishvananda/netlink"
	gomock "go.uber.org/mock/gomock"
)

// MockNetlink is a mock of Netlink interface.
type MockNetlink struct {
	ctrl     *gomock.Controller
	recorder *MockNetlinkMockRecorder
}

// MockNetlinkMockRecorder is the mock recorder for MockNetlink.
type MockNetlinkMockRecorder struct {
	mock *MockNetlink
}

// NewMockNetlink creates a new mock instance.
func NewMockNetlink(ctrl *gomock.Controller) *MockNetlink {
	mock := &MockNetlink{ctrl: ctrl}
	mock.recorder = &MockNetlinkMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNetlink) EXPECT() *MockNetlinkMockRecorder {
	return m.recorder
}

// LinkByIndex mocks base method.
func (m *MockNetlink) LinkByIndex(arg0 int) (netlink.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LinkByIndex", arg0)
	ret0, _ := ret[0].(netlink.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LinkByIndex indicates an expected call of LinkByIndex.
func (mr *MockNetlinkMockRecorder) LinkByIndex(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LinkByIndex", reflect.TypeOf((*MockNetlink)(nil).LinkByIndex), arg0)
}

// LinkByName mocks base method.
func (m *MockNetlink) LinkByName(arg0 string) (netlink.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LinkByName", arg0)
	ret0, _ := ret[0].(netlink.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LinkByName indicates an expected call of LinkByName.
func (mr *MockNetlinkMockRecorder) LinkByName(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LinkByName", reflect.TypeOf((*MockNetlink)(nil).LinkByName), arg0)
}

// LinkSetVfState mocks base method.
func (m *MockNetlink) LinkSetVfState(arg0 netlink.Link, arg1 int, arg2 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LinkSetVfState", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// LinkSetVfState indicates an expected call of LinkSetVfState.
func (mr *MockNetlinkMockRecorder) LinkSetVfState(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LinkSetVfState", reflect.TypeOf((*MockNetlink)(nil).LinkSetVfState), arg0, arg1, arg2)
}
